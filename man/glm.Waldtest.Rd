% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glm.Waldtest.R, R/gee.Waldtest.R
\name{glm.Waldtest}
\alias{glm.Waldtest}
\alias{gee.Waldtest}
\title{Perform a Wald test on a glm with the possible of adopting robust standard
errors}
\usage{
glm.Waldtest(models, contrast, sandwich = TRUE, adjust = FALSE)

gee.Waldtest(object, contrast, SE)
}
\arguments{
\item{models}{A list of generalized linear model. If a single model, make
sure to input it as a list by `list(glm)`.}

\item{contrast}{A `matrix` specifying the contrast, i.e. combinations of
model parameters, of interest.}

\item{sandwich}{A `logical` variable; should robust standard errors be
computed (sandwich procedure by Liang and Zeger). Default is TRUE.}

\item{adjust}{A `logical` variable; should a finite sample adjustment be
made? This amounts to multiplication with n/(n-k) where n is the number of
observations and k the number of estimated parameters.}

\item{object}{A `SingleCellExperiment` object that already contains fitted
GEE models in the `rowData` slot of the object, as obtained with the GEEutils
function `bakerySCE`.}

\item{SE}{A `character string` that indicates}
}
\value{
A `Dataframe` containing the requested model parameter estimates,
  (robust) standard errors, degrees of freedom, Wald test statistics and
  p-values.

A `Dataframe` containing the requested model parameter estimates,
  (robust) standard errors, degrees of freedom, Wald test statistics and
  p-values.
}
\description{
Perform a Wald test on a glm with the possible of adopting
  robust standard errors

Perform a Wald test on GEE models
}
\examples{
## Simulate single gene across 10 patients in 2 groups
n_cells <- 500
gene <- rpois(n_cells, 3)
group_id <- factor(rep(c("control", "treat"), each = n_cells / 2))
patient_id <- factor(rep(paste0("patient", 1:10), each = n_cells / 10))
data <- data.frame(gene, group_id, patient_id)

## Set up design and contrast
design <- model.matrix(~group_id, data = data)
L <- matrix(0, ncol = 1, nrow = ncol(design))
rownames(L) <- colnames(design)
L["group_idtreat", 1] <- 1

## Fit Poisson model
pois_model <- glm(gene ~ group_id, family = poisson, data = data)

## Wald test with sandwich estimator and small sample-size adjustment
res <- glm.Waldtest(
    models = list(pois_model),
    contrast = L[, 1],
    sandwich = TRUE,
    adjust = TRUE
)

set.seed(011235)
sce <- scuttle::mockSCE(ncells = 400, ngenes = 10)
sce$patient_id <- factor(rep(paste0("patient", 1:8), each = ncol(sce) / 8))
sce$group_id <- factor(rep(paste0("group", 1:2), each = ncol(sce) / 2))

MultiAssayExperiment::metadata(sce)$formula <- ~sce$group_id

## Fit models with bakerySCE
sce_fitted <- bakerySCE(object = sce,
                        id = "patient_id",
                        corstr = "independence",
                        extraSandwich = "none",
                        family = "poisson") 

## Set up design and contrast
design <- stats::model.matrix(~group_id, data = SummarizedExperiment::colData(sce))
L <- matrix(data = 0, ncol = 1, nrow = ncol(design)) # single contrast
rownames(L) <- colnames(design)
L["group_idgroup2",1] <- 1
colnames(L) <- "group1_vs_group2"

result <- gee.Waldtest(object=sce_fitted, contrast=L[,1], SE="robust.variance")
## result is a `data.frame` that contains the results of the Wald test for
##  the specified contrasts and working under the robust standard error by
## Liang and Zeger (1986).

}
\author{
Jeroen Gilis

Jeroen Gilis
}
